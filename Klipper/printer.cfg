# This file contains common pin mappings for the BigTreeTech Octopus.
# To use this config, the firmware should be compiled for the
# STM32F446 with a "32KiB bootloader" and a "12MHz crystal" clock reference.

# See docs/Config_Reference.md for a description of parameters.

# Definition for the primary carriage (holding the primary extruder)
# Driver0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 39.98 #38.97 #32 # 64 #40 #32
endstop_pin: PG6
position_endstop: -35
position_min: -35
position_max: 220
homing_speed: 50

# The definition for the primary extruder---DRIVER 4
[extruder]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
microsteps: 16
rotation_distance: 22.857142857142858
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA2 # HE0
sensor_pin:  PA6  # PF4 # T0
sensor_type: PT100 INA826 #ATC Semitec 104GT-2 #EPCOS 100K B57560G104F
adc_voltage: 5.0
voltage_offset: -0.79 # 0
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: -100
max_temp: 300
min_extrude_temp: 0 #175
max_extrude_only_distance: 1000

#SYNC_EXTRUDER_MOTION EXTRUDER=extrude MOTION_QUEUE=extruder


[extruder_stepper extrude]
extruder: extruder
#   The extruder this stepper is synchronized to. If this is set to an
#   empty string then the stepper will not be synchronized to an
#   extruder. This parameter must be provided.
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 45.714285714285714
#   See the "stepper" section for the definition of the above
#   parameters.

# Helper script to park the carriage (called from T0 and T1 macros)
[gcode_macro PARK_extruder]
gcode:
    SAVE_GCODE_STATE NAME=park0
    G90
    G1 X-35
    RESTORE_GCODE_STATE NAME=park0
 #Activate the primary extruder
[gcode_macro T0]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SYNC_EXTRUDER_MOTION EXTRUDER=extrude MOTION_QUEUE=extruder
    SET_DUAL_CARRIAGE CARRIAGE=0
    SET_GCODE_OFFSET Y=0
# Definition for the secondary carriage and extruder1
[dual_carriage]
axis: x
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance:  80.466 #80.87 #79.67 #62 #40 #32
endstop_pin: PG12
position_endstop: 320
position_min: 80
position_max: 320
homing_speed: 50


#---DRIVER 6
[extruder1]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
microsteps: 16
rotation_distance: 22.857142857142858
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA3 #PA3 # HE0
sensor_pin:  PF5 # T0
sensor_type: ATC Semitec 104GT-2 #EPCOS 100K B57560G104F
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: -100
max_temp: 300
min_extrude_temp: -100 #175
max_extrude_only_distance: 1000

#SYNC_EXTRUDER_MOTION EXTRUDER=extrude1 MOTION_QUEUE=extruder1


[extruder_stepper extrude1]
extruder: extruder1
#   The extruder this stepper is synchronized to. If this is set to an
#   empty string then the stepper will not be synchronized to an
#   extruder. This parameter must be provided.
step_pin: PE6
dir_pin: !PA14
enable_pin: !PE0
microsteps: 16
rotation_distance: 45.714285714285714 #22.857142857142858
#   See the "stepper" section for the definition of the above
#   parameters.




[gcode_macro PARK_extruder1]
gcode:
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X320
    RESTORE_GCODE_STATE NAME=park1

[gcode_macro T1]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SYNC_EXTRUDER_MOTION EXTRUDER=extrude1 MOTION_QUEUE=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    SET_GCODE_OFFSET Y=1

# Driver1
[stepper_y]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 40.0 #38.65 #32 #64 #40 #32
endstop_pin: PG9
position_endstop: 250
position_max: 250
position_min: 0
homing_speed: 60

# Driver2
[stepper_z]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 6.412191927610429 #6.286462674127872 #6.349962297098861 #12.6999245942 #6.349962297098861
endstop_pin: PG10
position_endstop: 297 #0.5
position_max: 297
position_min: -1
homing_speed: 20

#dir_pin = multi_pin: my_z_dir_pin
#[multi_pin my_z_dir_pin]
#pins: PE7


# Driver3
# The Octopus only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
#[stepper_]
#step_pin: PG4
#dir_pin: PC1
#enable_pin: PA0
#endstop_pin: PG11
#...




# Driver4
#[extruder]
#step_pin: PF9
#dir_pin: PF10
#enable_pin: !PG2
#microsteps: 16
#rotation_distance: 22.857142857142858
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: PA2 # HE0
#sensor_pin:  PF4 # T0
#sensor_type: ATC Semitec 104GT-2 #EPCOS 100K B57560G104F
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 250

#[filament_switch_sensor material_0]
#switch_pin: PG12

# Driver5
#[extruder1]
#step_pin: PC13
#dir_pin: PF0
#enable_pin: !PF1
#heater_pin: PA3 # HE1
#sensor_pin: PF5 # T1
#...

#[filament_switch_sensor material_1]
#switch_pin: PG13

# Driver6
#[extruder2]
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
#heater_pin: PB10 # HE2
#sensor_pin: PF6 # T2
#...

#[filament_switch_sensor material_2]
#switch_pin: PG14

# Driver7
#[extruder3]
#step_pin: PE6
#dir_pin: PA14
#enable_pin: !PE0
#heater_pin: PB11 # HE3
#sensor_pin: PF7 # T3
#...

#[filament_switch_sensor material_3]
#switch_pin: PG15

[heater_bed]
heater_pin: PB11 #PA3 #PB10 #PA1
sensor_pin: PF3 # TB
sensor_type:  NTC 100K beta 3950 # ATC Semitec 104GT-2 #ATC Semitec 104GT-2
control: watermark
min_temp: 0
max_temp: 130


#[fan]
#pin: PA8
#pin: PE5
#pin: PD12
#pin: PD13
#pin: PD14
#pin: PD15
#kick_start_time: 0.100

#[heater_fan fan1]
#pin: PE5

#[heater_fan fan2]
#pin: PD12

#[heater_fan fan3]
#pin: PD13

#[heater_fan fan4]
#pin: PD14

#[controller_fan fan5]
#pin: PD15

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_300043001851303432383339-if00
# CAN bus is also available on this board

[printer]
kinematics: cartesian
max_velocity: 500 #300
max_accel: 1500 #3000
max_z_velocity: 25
max_z_accel: 500 #100

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC4
#diag_pin: PG6
run_current: 1.000 #0.800
#stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PC6
#diag_pin: PG9
run_current: 1.000 #0.800
#stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC7
##diag_pin: PG10
run_current: 1.000 #0.800
#stealthchop_threshold: 999999
#uart_address: 3

#[tmc2209 stepper_]
#uart_pin: PC7
##diag_pin: PG11
#run_current: 0.650
#stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PF2
run_current: 1.000 #0.800
#stealthchop_threshold: 999999

[tmc2209 extruder1]
uart_pin: PE1
run_current: 1.000 #0.800
#stealthchop_threshold: 999999

#[tmc2209 my_extra_stepper]
#uart_pin: PE4
#run_current: 1.000 #0.800
#stealthchop_threshold: 999999

#[tmc2209 my_extra_stepper1]
#uart_pin: PD3
#run_current: 1.000 #0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder2]
#uart_pin: PE1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder3]
#uart_pin: PD3
#run_current: 0.800
#stealthchop_threshold: 999999

########################################
# TMC2130 configuration
########################################

#[tmc2130 stepper_x]
#cs_pin: PC4
#spi_bus: spi1
##diag1_pin: PG6
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 stepper_y]
#cs_pin: PD11
#spi_bus: spi1
##diag1_pin: PG9
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 stepper_z]
#cs_pin: PC6
#spi_bus: spi1
##diag1_pin: PG10
#run_current: 0.650
#stealthchop_threshold: 999999

#[tmc2130 stepper_]
#cs_pin: PC7
#spi_bus: spi1
##diag1_pin: PG11
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder]
#cs_pin: PF2
#spi_bus: spi1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder1]
#cs_pin: PE4
#spi_bus: spi1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder2]
#cs_pin: PE1
#spi_bus: spi1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2130 extruder3]
#cs_pin: PD3
#spi_bus: spi1
#run_current: 0.800
#stealthchop_threshold: 999999

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

# A [probe] section can be defined instead with a pin: setting identical
# to the sensor_pin: for a bltouch
#[bltouch]
#sensor_pin: PB7
#control_pin: PB6
#z_offset: 0

#[neopixel my_neopixel]
#pin: PB0

#####################################################################
#  Fan Control
#####################################################################

[multi_pin fan]
pins:PA8, PD13
#   A comma separated list of pins associated with this alias. This
#   parameter must be provided.

[fan]
pin = multi_pin:fan
#   Output pin controlling the fan. This parameter must be provided.
max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.
#shutdown_speed: 0
#   The desired fan speed (expressed as a value from 0.0 to 1.0) if
#   the micro-controller software enters an error state. The default
#   is 0.
#cycle_time: 0.010
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. Most fans
#   do not work well with hardware PWM, so it is not recommended to
#   enable this unless there is an electrical requirement to switch at
#   very high speeds. When using hardware PWM the actual cycle time is
#   constrained by the implementation and may be significantly
#   different than the requested cycle_time. The default is False.
kick_start_time: 0.5
#   Time (in seconds) to run the fan at full speed when either first
#   enabling or increasing it by more than 50% (helps get the fan
#   spinning). The default is 0.100 seconds.
off_below: 0.0
#   The minimum input speed which will power the fan (expressed as a
#   value from 0.0 to 1.0). When a speed lower than off_below is
#   requested the fan will instead be turned off. This setting may be
#   used to prevent fan stalls and to ensure kick starts are
#   effective. The default is 0.0.

#   This setting should be recalibrated whenever max_power is adjusted.
#   To calibrate this setting, start with off_below set to 0.0 and the
#   fan spinning. Gradually lower the fan speed to determine the lowest
#   input speed which reliably drives the fan without stalls. Set
#   off_below to the duty cycle corresponding to this value (for
#   example, 12% -> 0.12) or slightly higher.
#tachometer_pin:
#   Tachometer input pin for monitoring fan speed. A pullup is generally
#   required. This parameter is optional.
#tachometer_ppr: 2
#   When tachometer_pin is specified, this is the number of pulses per
#   revolution of the tachometer signal. For a BLDC fan this is
#   normally half the number of poles. The default is 2.
#tachometer_poll_interval: 0.0015
#   When tachometer_pin is specified, this is the polling period of the
#   tachometer pin, in seconds. The default is 0.0015, which is fast
#   enough for fans below 10000 RPM at 2 PPR. This must be smaller than
#   30/(tachometer_ppr*rpm), with some margin, where rpm is the
#   maximum speed (in RPM) of the fan.
#enable_pin: 
#   Optional pin to enable power to the fan. This can be useful for fans
#   with dedicated PWM inputs. Some of these fans stay on even at 0% PWM
#   input. In such a case, the PWM pin can be used normally, and e.g. a
#   ground-switched FET(standard fan pin) can be used to control power to
#   the fan.






[heater_fan my_nozzle_fan0]
pin: PE5
max_power: 1.0
#shutdown_speed:
#cycle_time: 0.010
#hardware_pwm:
kick_start_time: 0.1
#off_below: 0.0
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin: PE5
#   See the "fan" section for a description of the above parameters.
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 0.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0

[heater_fan my_nozzle_fan1]
pin: PD14
max_power: 1.0
#shutdown_speed:
#cycle_time:
#hardware_pwm:
kick_start_time: 0.1
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
heater: extruder1
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 0.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0


[heater_fan controller_fan0]
pin: PD12
#max_power:
#shutdown_speed:
cycle_time: 0.010
#hardware_pwm:
kick_start_time: 0.1
off_below: 0.0
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin: PD12
#   See the "fan" section for a description of the above parameters.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout: 0
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
heater: heater_bed
heater_temp: 0.0
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

[heater_fan controller_fan1]
pin: PD15
#max_power:
#shutdown_speed:
cycle_time: 0.010
#hardware_pwm:
kick_start_time: 0.1
off_below: 0.0
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin: PD12
#   See the "fan" section for a description of the above parameters.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout: 0
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
heater: heater_bed
heater_temp: 0.0
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.


#[quad_gantry_level]
#gantry_corners:
#   -30,0
#  300, 250
#   A newline separated list of X, Y coordinates describing the two
#   opposing corners of the gantry. The first entry corresponds to Z,
#   the second to Z2. This parameter must be provided.
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25
#points:
#    20,20
#    20,230
#    180,230
#    180,20
#   A newline separated list of four X, Y points that should be probed
#   during a QUAD_GANTRY_LEVEL command. Order of the locations is
#   important, and should correspond to Z, Z1, Z2, and Z3 location in
#   order. This parameter must be provided. For maximum accuracy,
#   ensure your probe offsets are configured.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#max_adjust: 4
#   Safety limit if an adjustment greater than this value is requested
#   quad_gantry_level will abort.
#retries: 0
#   Number of times to retry if the probed points aren't within
#   tolerance.
#retry_tolerance: 0
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance.




# Define a probe
[probe]
pin:PB7
x_offset: -20
y_offset: 0
z_offset: 0
sample_retract_dist: 2.0
speed: 2
lift_speed: 1
samples_tolerance: 0.100
samples:2
samples_result: average
samples_tolerance_retries : 2

[gcode_macro G29]
gcode:
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=p1
 #BED_MESH_OFFSET X=-20
 #BED_MESH_OFFSET X=140
 G1 X0 Y0 Z5 F4000
 BED_MESH_OFFSET X=140
 #SAVE_CONFIG 
 


 
[homing_override]
axes: xyz
gcode:
 G28 Z0
 G28 Y0
 G28 X0
 
set_position_x:-30


###start pt100 my
#temperature1: 26.5 
#voltage1: 0.822 
#temperature2: 50.3 
#voltage2: 0.914 
#temperature3: 75.5 
#voltage3: 1.012 
#temperature4: 100.6 
#voltage4: 1.106 
#temperature5: 150.4 
#voltage5: 1.289 
#temperature6: 200.1 
#voltage6: 1.464 
#temperature7: 225.1 
#voltage7: 1.547 
#temperature8: 250.8 
#voltage8: 1.623


###end pt100 my


# Example bed_mesh config section
[bed_mesh]
#horizontal_move_z: 8
mesh_min: 20,0
mesh_max: 180,250
probe_count: 3,3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.078856, 0.062413, -0.014734
#*# 	  -0.139972, -0.055812, -0.109915
#*# 	  -0.379427, -0.387443, -0.401469
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 0.0
#*# x_count = 3
#*# max_y = 250.0
#*# mesh_x_pps = 2
#*# max_x = 179.99
#*#
#*# [bed_mesh p1]
#*# version = 1
#*# points =
#*# 	  -0.078856, 0.062413, -0.014734
#*# 	  -0.139972, -0.055812, -0.109915
#*# 	  -0.379427, -0.387443, -0.401469
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 0.0
#*# x_count = 3
#*# max_y = 250.0
#*# mesh_x_pps = 2
#*# max_x = 179.99
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.507
#*# pid_ki = 0.525
#*# pid_kd = 220.176
#*#
#*# [extruder1]
#*# control = pid
#*# pid_kp = 24.583
#*# pid_ki = 1.639
#*# pid_kd = 92.185
